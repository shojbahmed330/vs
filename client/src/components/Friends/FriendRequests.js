import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Avatar,\n  Button,\n  Chip,\n  Grid,\n  Divider,\n  CircularProgress,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  IconButton,\n  Menu,\n  MenuItem\n} from '@mui/material';\nimport {\n  PersonAdd,\n  Check,\n  Close,\n  MoreVert,\n  People,\n  Send,\n  Cancel\n} from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { friendsAPI } from '../../api/friends';\n\nconst FriendRequests = () => {\n  const { user } = useAuth();\n  const [receivedRequests, setReceivedRequests] = useState([]);\n  const [sentRequests, setSentRequests] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(null);\n  const [message, setMessage] = useState('');\n  const [selectedTab, setSelectedTab] = useState('received'); // received, sent, suggestions\n  const [sendRequestDialog, setSendRequestDialog] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [requestMessage, setRequestMessage] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      const [receivedData, sentData, suggestionsData] = await Promise.all([\n        friendsAPI.getPendingRequests(),\n        friendsAPI.getSentRequests(),\n        friendsAPI.getSuggestions()\n      ]);\n      \n      setReceivedRequests(receivedData.friendRequests || []);\n      setSentRequests(sentData.friendRequests || []);\n      setSuggestions(suggestionsData.suggestions || []);\n    } catch (error) {\n      setMessage('ডেটা লোড করতে সমস্যা হয়েছে');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAcceptRequest = async (requestId) => {\n    try {\n      setProcessing(requestId);\n      await friendsAPI.acceptRequest(requestId);\n      setMessage('বন্ধু অনুরোধ গ্রহণ করা হয়েছে');\n      loadData();\n    } catch (error) {\n      setMessage('অনুরোধ গ্রহণে সমস্যা হয়েছে');\n    } finally {\n      setProcessing(null);\n    }\n  };\n\n  const handleRejectRequest = async (requestId) => {\n    try {\n      setProcessing(requestId);\n      await friendsAPI.rejectRequest(requestId);\n      setMessage('বন্ধু অনুরোধ প্রত্যাখ্যান করা হয়েছে');\n      loadData();\n    } catch (error) {\n      setMessage('অনুরোধ প্রত্যাখ্যানে সমস্যা হয়েছে');\n    } finally {\n      setProcessing(null);\n    }\n  };\n\n  const handleCancelRequest = async (requestId) => {\n    try {\n      setProcessing(requestId);\n      await friendsAPI.cancelRequest(requestId);\n      setMessage('বন্ধু অনুরোধ বাতিল করা হয়েছে');\n      loadData();\n    } catch (error) {\n      setMessage('অনুরোধ বাতিলে সমস্যা হয়েছে');\n    } finally {\n      setProcessing(null);\n    }\n  };\n\n  const handleSendRequest = async () => {\n    try {\n      setProcessing(selectedUser._id);\n      await friendsAPI.sendRequest(selectedUser._id, requestMessage);\n      setMessage('বন্ধু অনুরোধ পাঠানো হয়েছে');\n      setSendRequestDialog(false);\n      setRequestMessage('');\n      loadData();\n    } catch (error) {\n      setMessage('অনুরোধ পাঠাতে সমস্যা হয়েছে');\n    } finally {\n      setProcessing(null);\n    }\n  };\n\n  const openSendRequestDialog = (user) => {\n    setSelectedUser(user);\n    setSendRequestDialog(true);\n  };\n\n  const tabButtons = [\n    { key: 'received', label: 'প্রাপ্ত অনুরোধ', count: receivedRequests.length },\n    { key: 'sent', label: 'পাঠানো অনুরোধ', count: sentRequests.length },\n    { key: 'suggestions', label: 'বন্ধু পরামর্শ', count: suggestions.length }\n  ];\n\n  const renderRequestCard = (request, type) => {\n    const targetUser = type === 'received' ? request.sender : request.receiver;\n    const isProcessing = processing === request._id;\n\n    return (\n      <Card key={request._id} sx={{ mb: 2 }}>\n        <CardContent>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <Avatar\n                src={targetUser?.avatar}\n                sx={{ width: 60, height: 60 }}\n              >\n                {targetUser?.name?.charAt(0)}\n              </Avatar>\n            </Grid>\n            <Grid item xs>\n              <Typography variant=\"h6\" gutterBottom>\n                {targetUser?.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                {targetUser?.bio}\n              </Typography>\n              {request.message && (\n                <Typography variant=\"body2\" sx={{ fontStyle: 'italic', mt: 1 }}>\n                  \"{request.message}\"\n                </Typography>\n              )}\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {new Date(request.createdAt).toLocaleDateString('bn-BD')}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Box display=\"flex\" gap={1}>\n                {type === 'received' && (\n                  <>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      startIcon={<Check />}\n                      onClick={() => handleAcceptRequest(request._id)}\n                      disabled={isProcessing}\n                    >\n                      {isProcessing ? <CircularProgress size={16} /> : 'গ্রহণ'}\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"error\"\n                      size=\"small\"\n                      startIcon={<Close />}\n                      onClick={() => handleRejectRequest(request._id)}\n                      disabled={isProcessing}\n                    >\n                      প্রত্যাখ্যান\n                    </Button>\n                  </>\n                )}\n                {type === 'sent' && (\n                  <Button\n                    variant=\"outlined\"\n                    color=\"error\"\n                    size=\"small\"\n                    startIcon={<Cancel />}\n                    onClick={() => handleCancelRequest(request._id)}\n                    disabled={isProcessing}\n                  >\n                    {isProcessing ? <CircularProgress size={16} /> : 'বাতিল'}\n                  </Button>\n                )}\n              </Box>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const renderSuggestionCard = (suggestion) => {\n    const isProcessing = processing === suggestion._id;\n\n    return (\n      <Card key={suggestion._id} sx={{ mb: 2 }}>\n        <CardContent>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <Avatar\n                src={suggestion.avatar}\n                sx={{ width: 60, height: 60 }}\n              >\n                {suggestion.name?.charAt(0)}\n              </Avatar>\n            </Grid>\n            <Grid item xs>\n              <Typography variant=\"h6\" gutterBottom>\n                {suggestion.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                {suggestion.bio}\n              </Typography>\n              {suggestion.mutualFriendsCount > 0 && (\n                <Chip\n                  size=\"small\"\n                  icon={<People />}\n                  label={`${suggestion.mutualFriendsCount} জন সাধারণ বন্ধু`}\n                  variant=\"outlined\"\n                  sx={{ mt: 1 }}\n                />\n              )}\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<PersonAdd />}\n                onClick={() => openSendRequestDialog(suggestion)}\n                disabled={isProcessing}\n              >\n                বন্ধু যোগ করুন\n              </Button>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={4}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h4\" gutterBottom>\n        বন্ধুত্ব ব্যবস্থাপনা\n      </Typography>\n\n      {message && (\n        <Alert \n          severity=\"info\" \n          sx={{ mb: 2 }}\n          onClose={() => setMessage('')}\n        >\n          {message}\n        </Alert>\n      )}\n\n      {/* Tab Navigation */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Box display=\"flex\" gap={2}>\n          {tabButtons.map((tab) => (\n            <Button\n              key={tab.key}\n              variant={selectedTab === tab.key ? 'contained' : 'text'}\n              onClick={() => setSelectedTab(tab.key)}\n              sx={{ textTransform: 'none' }}\n            >\n              {tab.label}\n              {tab.count > 0 && (\n                <Chip \n                  size=\"small\" \n                  label={tab.count} \n                  sx={{ ml: 1 }} \n                  color={selectedTab === tab.key ? 'default' : 'primary'}\n                />\n              )}\n            </Button>\n          ))}\n        </Box>\n      </Box>\n\n      {/* Content */}\n      {selectedTab === 'received' && (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            প্রাপ্ত বন্ধু অনুরোধ ({receivedRequests.length})\n          </Typography>\n          {receivedRequests.length === 0 ? (\n            <Typography color=\"text.secondary\" textAlign=\"center\" py={4}>\n              কোনো বন্ধু অনুরোধ নেই\n            </Typography>\n          ) : (\n            receivedRequests.map(request => renderRequestCard(request, 'received'))\n          )}\n        </Box>\n      )}\n\n      {selectedTab === 'sent' && (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            পাঠানো বন্ধু অনুরোধ ({sentRequests.length})\n          </Typography>\n          {sentRequests.length === 0 ? (\n            <Typography color=\"text.secondary\" textAlign=\"center\" py={4}>\n              কোনো অনুরোধ পাঠানো হয়নি\n            </Typography>\n          ) : (\n            sentRequests.map(request => renderRequestCard(request, 'sent'))\n          )}\n        </Box>\n      )}\n\n      {selectedTab === 'suggestions' && (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            বন্ধু পরামর্শ ({suggestions.length})\n          </Typography>\n          {suggestions.length === 0 ? (\n            <Typography color=\"text.secondary\" textAlign=\"center\" py={4}>\n              কোনো পরামর্শ নেই\n            </Typography>\n          ) : (\n            suggestions.map(suggestion => renderSuggestionCard(suggestion))\n          )}\n        </Box>\n      )}\n\n      {/* Send Friend Request Dialog */}\n      <Dialog\n        open={sendRequestDialog}\n        onClose={() => setSendRequestDialog(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>\n          {selectedUser?.name} কে বন্ধু অনুরোধ পাঠান\n        </DialogTitle>\n        <DialogContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={2}>\n            <Avatar src={selectedUser?.avatar} sx={{ mr: 2 }}>\n              {selectedUser?.name?.charAt(0)}\n            </Avatar>\n            <Typography variant=\"h6\">{selectedUser?.name}</Typography>\n          </Box>\n          <TextField\n            fullWidth\n            multiline\n            rows={3}\n            label=\"বার্তা (ঐচ্ছিক)\"\n            value={requestMessage}\n            onChange={(e) => setRequestMessage(e.target.value)}\n            placeholder=\"আপনার বন্ধু অনুরোধের সাথে একটি বার্তা যোগ করুন...\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setSendRequestDialog(false)}>\n            বাতিল\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleSendRequest}\n            disabled={processing === selectedUser?._id}\n            startIcon={processing === selectedUser?._id ? <CircularProgress size={16} /> : <Send />}\n          >\n            অনুরোধ পাঠান\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default FriendRequests;