import React, { useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Card,\n  CardContent,\n  Button,\n  Box,\n  Grid,\n  Alert,\n  Chip\n} from '@mui/material';\nimport {\n  Fingerprint,\n  FaceRetouchingNatural,\n  RecordVoiceOver,\n  Settings,\n  Login\n} from '@mui/icons-material';\nimport BiometricAuth from '../components/BiometricAuth/BiometricAuth';\nimport BiometricLogin from '../components/BiometricAuth/BiometricLogin';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst BiometricDemo = () => {\n  const { user } = useAuth();\n  const [showSettings, setShowSettings] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n        üîê ‡¶¨‡¶æ‡¶Ø‡¶º‡ßã‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶Ö‡¶•‡ßá‡¶®‡ßç‡¶§‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶°‡ßá‡¶Æ‡ßã\n      </Typography>\n      \n      <Typography variant=\"h6\" color=\"text.secondary\" align=\"center\" sx={{ mb: 4 }}>\n        ‡¶´‡ßá‡¶∏ ‡¶∞‡¶ø‡¶ï‡¶ó‡¶®‡¶ø‡¶∂‡¶® ‡¶è‡¶¨‡¶Ç ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶∞‡¶ø‡¶ï‡¶ó‡¶®‡¶ø‡¶∂‡¶® ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶≤‡¶ó‡¶á‡¶®\n      </Typography>\n\n      <Alert severity=\"info\" sx={{ mb: 4 }}>\n        <Typography variant=\"body1\">\n          <strong>‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø:</strong> ‡¶è‡¶á ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡ßá ‡¶´‡ßá‡¶∏‡¶¨‡ßÅ‡¶ï‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶§ ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ + ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤ + ‡¶¨‡¶æ‡¶Ø‡¶º‡ßã‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶Ö‡¶•‡ßá‡¶®‡ßç‡¶§‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§\n          <br />\n          <strong>‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶§‡ßç‡¶§‡¶æ:</strong> ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶Ø‡¶º‡ßã‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶°‡ßá‡¶ü‡¶æ ‡¶è‡¶®‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü ‡¶ï‡¶∞‡ßá ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡•§\n        </Typography>\n      </Alert>\n\n      <Grid container spacing={3}>\n        {/* Feature Cards */}\n        <Grid item xs={12} md={4}>\n          <Card sx={{ height: '100%', textAlign: 'center' }}>\n            <CardContent>\n              <FaceRetouchingNatural sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\n              <Typography variant=\"h5\" gutterBottom>\n                ‡¶´‡ßá‡¶∏ ‡¶∞‡¶ø‡¶ï‡¶ó‡¶®‡¶ø‡¶∂‡¶®\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Æ‡ßÅ‡¶ñ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶â‡¶®‡ßç‡¶®‡¶§ AI ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡ßß‡ß®‡ßÆ-‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡¶ø‡¶ï ‡¶´‡ßá‡¶∏ ‡¶°‡¶ø‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡•§\n              </Typography>\n              <Chip label=\"face-api.js\" color=\"primary\" size=\"small\" />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card sx={{ height: '100%', textAlign: 'center' }}>\n            <CardContent>\n              <RecordVoiceOver sx={{ fontSize: 48, color: 'success.main', mb: 2 }} />\n              <Typography variant=\"h5\" gutterBottom>\n                ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶∞‡¶ø‡¶ï‡¶ó‡¶®‡¶ø‡¶∂‡¶®\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶£‡ßç‡¶†‡¶∏‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶Ø‡¶º ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶â‡¶≠‡¶Ø‡¶º ‡¶≠‡¶æ‡¶∑‡¶æ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡•§\n              </Typography>\n              <Chip label=\"‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü\" color=\"success\" size=\"small\" />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card sx={{ height: '100%', textAlign: 'center' }}>\n            <CardContent>\n              <Fingerprint sx={{ fontSize: 48, color: 'warning.main', mb: 2 }} />\n              <Typography variant=\"h5\" gutterBottom>\n                ‡¶â‡¶®‡ßç‡¶®‡¶§ ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶§‡ßç‡¶§‡¶æ\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                ‡¶è‡¶®‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶®, ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶ü‡¶ø-‡¶∏‡ßç‡¶™‡ßÅ‡¶´‡¶ø‡¶Ç, ‡¶è‡¶¨‡¶Ç ‡¶Æ‡¶æ‡¶≤‡ßç‡¶ü‡¶ø-‡¶´‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü‡¶∞ ‡¶Ö‡¶•‡ßá‡¶®‡ßç‡¶§‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶∏‡¶π ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶§‡ßç‡¶§‡¶æ‡•§\n              </Typography>\n              <Chip label=\"AES ‡¶è‡¶®‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡¶∂‡¶®\" color=\"warning\" size=\"small\" />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Action Buttons */}\n        <Grid item xs={12}>\n          <Box display=\"flex\" gap={2} justifyContent=\"center\" flexWrap=\"wrap\">\n            {user ? (\n              <>\n                <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  startIcon={<Settings />}\n                  onClick={() => setShowSettings(true)}\n                >\n                  ‡¶¨‡¶æ‡¶Ø‡¶º‡ßã‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  size=\"large\"\n                  startIcon={<Login />}\n                  onClick={() => setShowLogin(true)}\n                >\n                  ‡¶¨‡¶æ‡¶Ø‡¶º‡ßã‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶≤‡¶ó‡¶á‡¶® ‡¶ü‡ßá‡¶∏‡ßç‡¶ü\n                </Button>\n              </>\n            ) : (\n              <>\n                <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  startIcon={<Login />}\n                  onClick={() => setShowLogin(true)}\n                >\n                  ‡¶¨‡¶æ‡¶Ø‡¶º‡ßã‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶≤‡¶ó‡¶á‡¶®\n                </Button>\n                <Alert severity=\"warning\" sx={{ mt: 2 }}>\n                  ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶æ‡¶Ø‡¶º‡ßã‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§\n                </Alert>\n              </>\n            )}\n          </Box>\n        </Grid>\n\n        {/* Technical Details */}\n        <Grid item xs={12}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                üõ†Ô∏è ‡¶ü‡ßá‡¶ï‡¶®‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶°‡¶ø‡¶ü‡ßá‡¶á‡¶≤‡¶∏\n              </Typography>\n              \n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>‡¶´‡ßç‡¶∞‡¶®‡ßç‡¶ü‡¶è‡¶®‡ßç‡¶°:</strong>\n                  </Typography>\n                  <ul>\n                    <li>React.js + Material-UI</li>\n                    <li>face-api.js for real-time face detection</li>\n                    <li>MediaRecorder API for voice capture</li>\n                    <li>WebRTC for camera access</li>\n                  </ul>\n                </Grid>\n                \n                <Grid item xs={12} md={6}>\n                  <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                    <strong>‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶è‡¶®‡ßç‡¶°:</strong>\n                  </Typography>\n                  <ul>\n                    <li>Node.js + Express.js</li>\n                    <li>MongoDB with encrypted biometric storage</li>\n                    <li>JWT tokens for session management</li>\n                    <li>Multer for file uploads</li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Modals */}\n      {showSettings && (\n        <div style={{ \n          position: 'fixed', \n          top: 0, \n          left: 0, \n          right: 0, \n          bottom: 0, \n          backgroundColor: 'rgba(0,0,0,0.5)', \n          zIndex: 1300,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: '20px'\n        }}>\n          <div style={{ \n            backgroundColor: 'white', \n            borderRadius: '8px', \n            maxWidth: '900px', \n            width: '100%', \n            maxHeight: '90vh', \n            overflow: 'auto',\n            padding: '20px'\n          }}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n              <Typography variant=\"h5\">‡¶¨‡¶æ‡¶Ø‡¶º‡ßã‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡¶ø‡¶ï ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏</Typography>\n              <Button onClick={() => setShowSettings(false)}>‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®</Button>\n            </Box>\n            <BiometricAuth />\n          </div>\n        </div>\n      )}\n\n      {showLogin && (\n        <BiometricLogin onClose={() => setShowLogin(false)} />\n      )}\n    </Container>\n  );\n};\n\nexport default BiometricDemo;